{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\app-recherche-donnee-jop\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { signInWithEmailAndPassword, fetchSignInMethodsForEmail, sendPasswordResetEmail } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isResettingPassword, setIsResettingPassword] = useState(false);\n  const [emailVerified, setEmailVerified] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Ajout de l'état de connexion\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setIsLoggedIn(true); // Définir comme connecté une fois la connexion établie\n      // Rediriger ou afficher un message de succès\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const verifyEmail = async () => {\n    if (!email) {\n      setError(\"Veuillez entrer votre adresse e-mail.\");\n      return;\n    }\n    try {\n      const signInMethods = await fetchSignInMethodsForEmail(auth, email);\n      if (signInMethods.length > 0) {\n        setEmailVerified(true);\n        setError('');\n      } else {\n        setError(\"Aucun compte trouvé pour cette adresse e-mail.\");\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    try {\n      await sendPasswordResetEmail(auth, email);\n      alert(\"Un lien de réinitialisation de mot de passe a été envoyé à votre adresse e-mail.\");\n      setIsResettingPassword(false);\n      setEmailVerified(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!isLoggedIn && !isResettingPassword &&\n    /*#__PURE__*/\n    // Vérifier si l'utilisateur n'est pas connecté et n'est pas en train de réinitialiser le mot de passe\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Mot de passe\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#!\",\n        onClick: () => setIsResettingPassword(true),\n        children: \"Mot de passe oubli\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), isLoggedIn &&\n    /*#__PURE__*/\n    // Afficher les informations de connexion si l'utilisateur est connecté\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Connect\\xE9 en tant que \", auth.currentUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"raSWw/4nnEt8N32zziLm1z0mpvw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","signInWithEmailAndPassword","fetchSignInMethodsForEmail","sendPasswordResetEmail","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","error","setError","isResettingPassword","setIsResettingPassword","emailVerified","setEmailVerified","isLoggedIn","setIsLoggedIn","handleLogin","e","preventDefault","message","verifyEmail","signInMethods","length","handlePasswordReset","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","href","onClick","currentUser","_c","$RefreshReg$"],"sources":["C:/Users/User/app-recherche-donnee-jop/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { signInWithEmailAndPassword, fetchSignInMethodsForEmail, sendPasswordResetEmail } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\nimport '../index.css';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [isResettingPassword, setIsResettingPassword] = useState(false);\r\n    const [emailVerified, setEmailVerified] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // Ajout de l'état de connexion\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await signInWithEmailAndPassword(auth, email, password);\r\n            setIsLoggedIn(true); // Définir comme connecté une fois la connexion établie\r\n            // Rediriger ou afficher un message de succès\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const verifyEmail = async () => {\r\n        if (!email) {\r\n            setError(\"Veuillez entrer votre adresse e-mail.\");\r\n            return;\r\n        }\r\n        try {\r\n            const signInMethods = await fetchSignInMethodsForEmail(auth, email);\r\n            if (signInMethods.length > 0) {\r\n                setEmailVerified(true);\r\n                setError('');\r\n            } else {\r\n                setError(\"Aucun compte trouvé pour cette adresse e-mail.\");\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const handlePasswordReset = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await sendPasswordResetEmail(auth, email);\r\n            alert(\"Un lien de réinitialisation de mot de passe a été envoyé à votre adresse e-mail.\");\r\n            setIsResettingPassword(false);\r\n            setEmailVerified(false);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {!isLoggedIn && !isResettingPassword && ( // Vérifier si l'utilisateur n'est pas connecté et n'est pas en train de réinitialiser le mot de passe\r\n                <>\r\n                    <h1>Connexion</h1>\r\n                    <form onSubmit={handleLogin}>\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Mot de passe\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <button type=\"submit\">Se connecter</button>\r\n                        {error && <p>{error}</p>}\r\n                    </form>\r\n                    <a href=\"#!\" onClick={() => setIsResettingPassword(true)}>Mot de passe oublié</a>\r\n                </>\r\n            )}\r\n            {isLoggedIn && ( // Afficher les informations de connexion si l'utilisateur est connecté\r\n                <div>\r\n                    <h1>Connecté en tant que {auth.currentUser.email}</h1>\r\n                    {/* Ajoutez d'autres informations de connexion si nécessaire */}\r\n                </div>\r\n            )}\r\n            {/* Le reste de votre code inchangé */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}