{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\app-recherche-donnee-jop\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { signInWithEmailAndPassword, fetchSignInMethodsForEmail, sendPasswordResetEmail } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isResettingPassword, setIsResettingPassword] = useState(false);\n  const [emailVerified, setEmailVerified] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Ajout de l'état pour suivre la connexion\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setIsLoggedIn(true); // Définir comme connecté une fois la connexion établie\n      // Rediriger ou afficher un message de succès\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  // Le reste de votre code inchangé\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!isLoggedIn && !isResettingPassword &&\n    /*#__PURE__*/\n    // Ajouter la vérification pour ne pas afficher les informations si déjà connecté ou en train de réinitialiser le mot de passe\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#!\",\n        onClick: () => setIsResettingPassword(true),\n        children: \"Mot de passe oubli\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), isLoggedIn &&\n    /*#__PURE__*/\n    // Afficher les informations de connexion si l'utilisateur est connecté\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vous \\xEAtes connect\\xE9 !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"raSWw/4nnEt8N32zziLm1z0mpvw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","signInWithEmailAndPassword","fetchSignInMethodsForEmail","sendPasswordResetEmail","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","error","setError","isResettingPassword","setIsResettingPassword","emailVerified","setEmailVerified","isLoggedIn","setIsLoggedIn","handleLogin","e","preventDefault","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","href","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/app-recherche-donnee-jop/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { signInWithEmailAndPassword, fetchSignInMethodsForEmail, sendPasswordResetEmail } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\nimport '../index.css';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [isResettingPassword, setIsResettingPassword] = useState(false);\r\n    const [emailVerified, setEmailVerified] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // Ajout de l'état pour suivre la connexion\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await signInWithEmailAndPassword(auth, email, password);\r\n            setIsLoggedIn(true); // Définir comme connecté une fois la connexion établie\r\n            // Rediriger ou afficher un message de succès\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    // Le reste de votre code inchangé\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {!isLoggedIn && !isResettingPassword && ( // Ajouter la vérification pour ne pas afficher les informations si déjà connecté ou en train de réinitialiser le mot de passe\r\n                <>\r\n                    <h1>Connexion</h1>\r\n                    <form onSubmit={handleLogin}>\r\n                        {/* Vos champs d'entrée pour l'email et le mot de passe */}\r\n                        <button type=\"submit\">Se connecter</button>\r\n                        {error && <p>{error}</p>}\r\n                    </form>\r\n                    <a href=\"#!\" onClick={() => setIsResettingPassword(true)}>Mot de passe oublié</a>\r\n                </>\r\n            )}\r\n            {isLoggedIn && ( // Afficher les informations de connexion si l'utilisateur est connecté\r\n                <div>\r\n                    <h1>Vous êtes connecté !</h1>\r\n                    {/* Afficher les informations supplémentaires de l'utilisateur */}\r\n                </div>\r\n            )}\r\n            {/* Le reste de votre code inchangé */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}